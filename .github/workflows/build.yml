# === GitHub Actions Workflow: Cross-Platform Build for Pong ===
# This workflow automates the build process for the Pong project on both Linux and Windows.
# It is triggered on every push or pull request to the `main` branch.
#
#  What it does:
# 1. Checks out the repository, including the SFML submodule.
# 2. Installs all necessary system dependencies for building SFML and the Pong game.
# 3. Builds the project using the Makefile (which also builds SFML from source).
# 4. Uploads the resulting binaries (and DLLs on Windows) as downloadable artifacts.
#
#  Linux Job:
# - Uses Ubuntu as the build environment.
# - Installs development libraries required by SFML (OpenGL, X11, audio, fonts, etc.).
# - Runs `make` to build both SFML and the Pong executable.
# - Uploads the final binary (`bin/pong`) as an artifact named `pong-linux`.
#
# ðŸªŸWindows Job:
# - Uses Windows with MSYS2 to provide a Unix-like shell and MinGW toolchain.
# - Installs GCC , Make and CMAKE via MSYS2.
# - Runs `make` inside the MSYS2 shell to build SFML and Pong.
# - Uploads the final executable (`bin/pong.exe`) and all required DLLs as `pong-windows`.
#
# This setup ensures consistent, portable builds across platforms and simplifies distribution.

name: Build Pong
#
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake g++ make \
            libx11-dev libxrandr-dev libxcursor-dev libxi-dev libxinerama-dev \
            libgl1-mesa-dev libudev-dev libopenal-dev libflac-dev libvorbis-dev libfreetype6-dev

      - name: Build project
        run: make

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: pong-linux
          path: bin/pong

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install MSYS2 and dependencies
        uses: msys2/setup-msys2@v2
        with:
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            mingw-w64-x86_64-cmake
            mingw-w64-x86_64-make
            mingw-w64-x86_64-pkg-config

      - name: Build project
        shell: msys2 {0}
        run: |
          export PATH="/mingw64/bin:$PATH"
          make

      - name: Upload binary and DLLs
        uses: actions/upload-artifact@v4
        with:
          name: pong-windows
          path: |
            bin/pong.exe
            bin/*.dll
